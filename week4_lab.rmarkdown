---
title: "第四周实验：`ggplot2` 可视化探索"
author: "Your Name / TA Name"
format:
  html:
    toc: true
    code-fold: true
    code-tools: true
editor: visual
---





## 1. 目标

本实验旨在通过实践 `ggplot2` 包，熟练掌握创建常用统计图形进行探索性数据分析 (EDA) 的技能，并练习基本的图形定制。

-   回顾 `ggplot2` 的图层语法。
-   练习绘制单变量图形：直方图、密度图、箱线图。
-   练习绘制双变量图形：散点图、分组箱线图/小提琴图、条形图。
-   使用 `labs()` 添加标题和标签。
-   使用 `theme_...()` 应用不同的视觉主题。
-   (可选) 结合 `dplyr` 进行数据汇总后再绘图。

## 2. 数据准备

我们将主要使用 `ggplot2` 内置的 `mpg` 数据集。确保 `tidyverse` 已加载。





```{r setup-data-w4}
library(tidyverse)
library(ggplot2) # ggplot2 包含在 tidyverse 中，但显式加载有时有助于代码清晰

# 查看 mpg 数据集结构
glimpse(mpg)
# ?mpg # 查看帮助文档
```





## 3. 单变量可视化练习

探索单个变量的分布特征。

### 3.1 直方图 (`geom_histogram`)

**任务:** 1. 绘制变量 `cty` (城市里程/加仑) 的直方图。 2. 尝试调整 `binwidth` 参数（例如 `binwidth = 2` 或 `binwidth = 5`），观察图形的变化。 3. 为直方图添加填充色 (`fill`) 和边框色 (`color`)。





```{r practice-histogram}
# 1. 绘制 cty 的直方图 (默认 binwidth)
ggplot(data = mpg, mapping = aes(x = cty)) +
  geom_histogram() +
  labs(title = "城市里程 (cty) 分布 - 默认 Binwidth")

# 2. 调整 binwidth
ggplot(data = mpg, mapping = aes(x = cty)) +
  geom_histogram(binwidth = 2) +
  labs(title = "城市里程 (cty) 分布 - Binwidth = 2")

ggplot(data = mpg, mapping = aes(x = cty)) +
  geom_histogram(binwidth = 5) +
  labs(title = "城市里程 (cty) 分布 - Binwidth = 5")

# 3. 添加颜色
ggplot(data = mpg, mapping = aes(x = cty)) +
  geom_histogram(binwidth = 2, fill = "lightblue", color = "black") +
  labs(title = "城市里程 (cty) 分布 - 带颜色") +
  theme_minimal() # 应用一个简洁主题
```





### 3.2 密度图 (`geom_density`)

**任务:** 1. 绘制变量 `hwy` (高速公路里程/加仑) 的密度图。 2. 添加填充色，并使用 `alpha` 参数设置透明度。 3. (可选挑战) 在同一张图上绘制不同 `drv` (驱动方式) 的 `hwy` 密度图，使用 `fill` 映射到 `drv` 并设置 `alpha`。





```{r practice-density}
# 1. 绘制 hwy 的密度图
ggplot(data = mpg, mapping = aes(x = hwy)) +
  geom_density() +
  labs(title = "高速公路里程 (hwy) 密度图")

# 2. 添加颜色和透明度
ggplot(data = mpg, mapping = aes(x = hwy)) +
  geom_density(fill = "salmon", alpha = 0.6) +
  labs(title = "高速公路里程 (hwy) 密度图 - 带颜色") +
  theme_light()

# 3. (可选挑战) 按 drv 分组绘制密度图
ggplot(data = mpg, mapping = aes(x = hwy, fill = drv)) + # 将 fill 映射到 drv
  geom_density(alpha = 0.5) + # 设置透明度以看到重叠部分
  labs(title = "不同驱动方式的高速里程密度图", fill = "驱动方式") +
  theme_bw()
```





### 3.3 箱线图 (`geom_boxplot`)

**任务:** 1. 绘制变量 `displ` (发动机排量) 的箱线图。 2. 绘制按 `class` (车辆类别) 分组的 `hwy` (高速公路里程) 的箱线图。 3. 将上一步的箱线图翻转，使类别标签在 Y 轴上，更易阅读 (`coord_flip()`)。 4. (可选挑战) 在分组箱线图上叠加 `geom_jitter()`，显示原始数据点（设置 `alpha` 和 `width`）。





```{r practice-boxplot}
# 1. 绘制 displ 的箱线图
ggplot(data = mpg, mapping = aes(y = displ)) + # 映射到 y 轴画垂直箱线图
  geom_boxplot(fill = "lightgreen") +
  labs(title = "发动机排量 (displ) 箱线图")

# 2. 按 class 分组绘制 hwy 的箱线图
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
  geom_boxplot(aes(fill = class)) + # 按 class 填充颜色
  labs(title = "不同车辆类别的高速里程箱线图", x = "车辆类别", y = "高速里程 (MPG)") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # 旋转 x 轴标签

# 3. 翻转坐标轴
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
  geom_boxplot(aes(fill = class)) +
  coord_flip() + # 翻转
  labs(title = "不同车辆类别的高速里程箱线图 (翻转)", y = "车辆类别", x = "高速里程 (MPG)") +
  guides(fill = "none") # 隐藏图例 (如果需要)

# 4. (可选挑战) 叠加抖动点图
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
  geom_boxplot(aes(fill = class), outlier.shape = NA) + # outlier.shape=NA 隐藏箱线图本身的异常点
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") + # 添加抖动点
  coord_flip() +
  labs(title = "分组箱线图与抖动点图", y = "车辆类别", x = "高速里程 (MPG)") +
  guides(fill = "none")
```





## 4. 双变量可视化练习

探索两个变量之间的关系。

### 4.1 散点图 (`geom_point`)

**任务:** 1. 绘制 `displ` (发动机排量) 和 `cty` (城市里程) 的散点图。 2. 在散点图上，将点的**颜色**映射到 `drv` (驱动方式)。 3. 在散点图上，将点的**大小**映射到 `cyl` (气缸数)。 4. (可选挑战) 添加一条线性拟合线 (`geom_smooth(method = "lm")`)。





```{r practice-scatter}
# 1. 绘制 displ vs cty 散点图
ggplot(data = mpg, mapping = aes(x = displ, y = cty)) +
  geom_point() +
  labs(title = "排量 vs 城市里程", x = "排量 (升)", y = "城市里程 (MPG)")

# 2. 颜色映射到 drv
ggplot(data = mpg, mapping = aes(x = displ, y = cty, color = drv)) +
  geom_point() +
  labs(title = "排量 vs 城市里程 (按驱动方式)", x = "排量 (升)", y = "城市里程 (MPG)", color = "驱动方式")

# 3. 大小映射到 cyl
ggplot(data = mpg, mapping = aes(x = displ, y = cty, size = cyl)) +
  geom_point(alpha = 0.5) + # 加点透明度
  labs(title = "排量 vs 城市里程 (按气缸数)", x = "排量 (升)", y = "城市里程 (MPG)", size = "气缸数")

# 4. (可选挑战) 添加线性拟合线
ggplot(data = mpg, mapping = aes(x = displ, y = cty)) +
  geom_point(aes(color = drv), alpha = 0.6) + # 按 drv 着色
  geom_smooth(method = "lm", se = FALSE, color = "black") + # 添加一条整体线性拟合线 (不显示置信区间)
  labs(title = "排量 vs 城市里程 (带拟合线)", x = "排量 (升)", y = "城市里程 (MPG)", color = "驱动方式") +
  theme_bw()
```





### 4.2 条形图 (`geom_bar` / `geom_col`)

**任务:** 1. 使用 `geom_bar()` 统计 `drv` (驱动方式) 的频数并绘制条形图。 2. (结合 `dplyr`) 先计算每个 `manufacturer` (制造商) 的平均 `hwy` (高速公路里程)，然后使用 `geom_col()` 绘制条形图展示结果，并按平均里程排序。





```{r practice-bar}
# 1. 统计 drv 频数
ggplot(data = mpg, mapping = aes(x = drv)) +
  geom_bar(aes(fill = drv)) + # 按 drv 填充颜色
  labs(title = "不同驱动方式的车辆数量", x = "驱动方式", y = "数量")

# 2. 计算每个制造商的平均 hwy 并绘图
manufacturer_hwy <- mpg %>%
  group_by(manufacturer) %>%
  summarise(avg_hwy = mean(hwy, na.rm = TRUE)) %>%
  arrange(desc(avg_hwy)) # 按平均 hwy 降序排列

print(manufacturer_hwy)

# 使用 geom_col 绘制已计算好的值
ggplot(data = manufacturer_hwy, mapping = aes(x = reorder(manufacturer, avg_hwy), y = avg_hwy)) + # reorder() 按 avg_hwy 对制造商排序
  geom_col(aes(fill = manufacturer)) + # 按制造商填充颜色
  coord_flip() + # 翻转坐标轴，使制造商名称更易读
  labs(title = "各制造商平均高速公路里程", x = "制造商", y = "平均高速里程 (MPG)") +
  guides(fill = "none") + # 隐藏图例
  theme_minimal()
```





## 5. 图形定制练习 (`labs` & `theme`)

**任务:** 选择你之前绘制的任意一个图形，进行以下定制： 1. 使用 `labs()` 添加一个有意义的 `title`, `subtitle`, `x` 轴标签, `y` 轴标签, 以及 `caption`。 2. 尝试应用不同的内置主题，如 `theme_bw()`, `theme_minimal()`, `theme_classic()`, `theme_light()`，观察效果。





```{r practice-customization}
# 选择一个图形，例如 displ vs cty 散点图
ggplot(data = mpg, mapping = aes(x = displ, y = cty, color = drv)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") + # 添加拟合线
  # 1. 添加标签
  labs(
    title = "发动机排量与城市里程的关系",
    subtitle = "按驱动方式着色，数据来源：mpg 数据集",
    x = "发动机排量 (升)",
    y = "城市里程 (英里/加仑)",
    color = "驱动方式",
    caption = "图形生成于 Week 4 Lab"
  ) +
  # 2. 应用主题
  theme_light()
  # theme_bw()
  # theme_classic()
  # theme_minimal()
```





## 6. 实验总结

在本实验中，我们通过 `mpg` 数据集实践了 `ggplot2` 的核心功能。我们练习了绘制用于探索单变量分布的直方图、密度图和箱线图，以及用于探索双变量关系的散点图和条形图（包括分组比较）。我们还学习了如何使用 `labs()` 和 `theme_...()` 对图形进行基本定制，使其更具信息量和美观性。熟练掌握 `ggplot2` 是进行有效数据探索和结果沟通的关键技能。
