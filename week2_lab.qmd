---
title: "第二周实验：数据导入与描述性统计"
execute:
  echo: true
  message: false
  warning: false
  error: false
  cache: false
---

## 1. 目标

本实验旨在练习使用 `readr` 包导入数据，熟悉数据框 (Data Frame) 和 Tibble，处理因子类型，并计算和解释基本的描述性统计量，同时初步使用 `dplyr` 进行数据筛选。

-   使用 `read_csv()` 导入数据文件。
-   检查和理解导入数据的结构 (`glimpse`, `str`, `summary`)。
-   创建和操作因子变量 (`factor`, `levels`)。
-   计算集中趋势（均值、中位数）和离散趋势（标准差、IQR、分位数）统计量。
-   使用 `dplyr` 的 `select()` 和 `filter()` 选择和筛选数据。

## 2. 数据导入 (`readr`)

我们将使用一个模拟的学生成绩数据集 `grades.csv`。

**`grades.csv` 文件内容:**

```csv
StudentID,Name,Major,Exam1,Exam2,FinalProject,Attendance
S001,Alice,Statistics,85,88,92,Present
S002,Bob,CompSci,92,NA,85,Present
S003,Charlie,Math,78,82,75,Absent
S004,David,Statistics,88,90,95,Present
S005,Eve,CompSci,75,80,NA,Absent
S006,Frank,Statistics,95,98,96,Present
S007,Grace,Math,NA,75,80,Present
S008,Heidi,CompSci,81,84,88,Present
```

**任务:** 

1. 将上面的 CSV 内容复制到一个**纯文本文件**中，并将其命名为 `grades.csv`，保存在你的 R 项目工作目录下（或者你知道其路径的地方）。 
2. 使用 `readr::read_csv()` 函数将 `grades.csv` 文件读入 R，并将结果存储在一个名为 `grades_data` 的 Tibble 中。 
3. 打印 `grades_data` 查看内容。


## 3. 数据结构探索

导入数据后，检查其结构非常重要。

**任务:** 使用以下函数探索 `grades_data` 的结构：

1.  `glimpse()`: 快速查看数据结构，包括列名、类型和前几行数据。
2.  `str()`: 显示对象的内部结构（更详细）。
3.  `summary()`: 对每一列计算基本的描述性统计（对数值型计算最小值、Q1、中位数、均值、Q3、最大值、NA 数量；对字符型/因子型计算频数）。
4.  `head()`: 查看前几行数据。
5.  `tail()`: 查看后几行数据。


**思考:** 

* `read_csv` 自动识别的列类型是否都正确？ 
* 哪些列包含缺失值 (NA)？`summary()` 如何提示我们？ 
* `Major` 和 `Attendance` 列目前是什么类型？你认为它们应该是什么类型更合适？

## 4. 因子 (Factor)

`Major` 和 `Attendance` 列代表分类信息。将它们转换为因子类型通常更便于后续分析和绘图。

**任务:** 

1. 将 `grades_data` 中的 `Major` 列转换为因子类型。查看转换后的列和它的水平 (levels)。
2. 将 `Attendance` 列转换为因子类型。思考一下，`Attendance` 的水平是否有自然的顺序？（例如，"Present" 是否优于 "Absent"？在这个场景下可能没有）。
3. (可选挑战) 如果我们认为专业 "Statistics" \> "Math" \> "CompSci"，如何创建一个有序因子？



## 5. 描述性统计计算

现在我们来计算一些描述性统计量，以更好地理解数值型变量（如考试成绩）的分布。

**任务:** 计算 `Exam1`, `Exam2`, 和 `FinalProject` 这三列的： 

1. 均值 (Mean)
2. 中位数 (Median)
3. 标准差 (Standard Deviation)
4. 四分位距 (IQR)
5. 最小值 (Minimum) 和最大值 (Maximum)
6. 0.1 分位数和 0.9 分位数

**注意处理缺失值 (NA)！** 很多函数需要设置 `na.rm = TRUE`。


**思考:** 

* 比较 `Exam1` 和 `Exam2` 的均值和中位数，哪个考试的平均表现似乎更好？哪个考试的成绩分布更受异常值影响（如果看均值和中位数的差异）？ 
* 比较 `Exam1` 和 `Exam2` 的标准差和 IQR，哪个考试的成绩更分散？

## 6. `dplyr` 初步：`select()` 与 `filter()`

练习使用 `dplyr` 选择特定的列和行。

**任务:** 使用 `grades_data` Tibble 完成以下操作：

1.  选择 `StudentID`, `Name`, 和 `FinalProject` 这三列。
2.  选择除了 `Attendance` 之外的所有列。
3.  筛选出 `Major` 为 "Statistics" 的所有学生记录。
4.  筛选出 `Exam1` 成绩大于 85 分的学生记录。
5.  筛选出 `Major` 为 "CompSci" **且** `Exam2` 成绩大于 80 分的学生记录。
6.  筛选出 `Attendance` 为 "Absent" **或** `FinalProject` 成绩低于 80 分的学生记录。
7.  **链式操作:** 筛选出 `Major` 为 "Statistics" 的学生，然后只选择他们的 `Name` 和 `FinalProject` 成绩。



## 7. 实验总结

在本实验中，我们练习了从 CSV 文件导入数据，使用多种函数检查了数据结构，将分类变量转换为因子，计算了关键的描述性统计量（注意处理 NA），并使用 `dplyr` 的 `select` 和 `filter` 对数据进行了基本的筛选和子集提取。这些是进行任何数据分析前必不可少的数据熟悉和准备步骤。