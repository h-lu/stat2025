{"title":"第一周：项目启动与统计学导论","markdown":{"headingText":"第一周：项目启动与统计学导论","containsRefs":false,"markdown":"\n### 欢迎来到统计学！\n\n本周我们将开启统计学之旅！  第一周是入门周，我们会一起了解本课程的项目式教学模式，探索统计学的奥秘，初步接触强大的R语言和AI辅助工具，并开始为我们的第一个项目做准备。\n\n**本讲义特别说明：**  本课程鼓励大家使用现代化的代码编辑器，例如 **VS Code** 或 **Cursor**，并结合强大的 **AI 插件** 来进行 R 语言编程和统计分析。  这些工具能够提供更智能的代码辅助、更高效的开发体验，并更好地与 AI 功能集成。  当然，如果您习惯使用 RStudio，也可以继续使用。  本讲义将重点介绍如何在 VS Code 和 Cursor 中配置和使用 R 语言环境。\n\n::: {.callout-note}\n## 本周学习目标 \n\n*   **理解课程模式:** 了解项目式教学，明确项目要求。\n*   **统计学入门:**  **深入理解**统计学的基本概念和应用。\n*   **R语言初探 (VS Code/Cursor):**  初步认识 R 语言在 VS Code 或 Cursor 中的使用。\n*   **AI工具体验 (VS Code/Cursor):**  了解 AI 插件在 VS Code 或 Cursor 中辅助统计学习的作用。\n*   **数据获取初步:**  掌握基本数据获取方法 (公开数据集、API)。\n*   **环境搭建 (VS Code/Cursor):**  完成 VS Code 或 Cursor 中 R 语言环境的搭建和 `tidyverse` 包的安装。\n:::\n\n\n### 课程和项目介绍\n\n大家好！很高兴和大家一起学习统计学。\n\n*   **课程概要:**  本课程为期16周，共64课时。  我们的目标是让大家不仅掌握统计学的理论知识，更能运用统计方法解决实际的经济管理问题。  考核方式包括平时成绩、项目报告和期末考试。\n\n*   **项目式教学:**  本课程采用项目式教学，这意味着我们将通过一系列实际项目来学习统计学。  项目是驱动力，实践是最好的老师！\n\n    *   **项目一：数据探索与初步洞察 (4周)**  我们将从大家感兴趣的领域入手，例如电影、音乐、游戏、股票等，选择一个主题进行数据探索和初步分析。\n\n    *   **项目目标:**  通过实际操作，学习数据获取、描述性统计和初步推断，培养数据分析的初步能力。\n\n    *   **主题选择:**  大家可以选择以下主题，或者自拟主题 (需经老师批准)：\n        *   电影偏好分析\n        *   音乐流行趋势分析\n        *   电子游戏市场分析\n        *   股票市场波动分析\n\n    *   **小组合作:**  我们将以小组 (2-3人) 为单位进行项目。鼓励大家自由组队，发挥团队合作精神。小组内部分工协作，例如数据收集、数据分析、报告撰写、展示汇报等。\n\n    *   **时间安排:**  项目一为期四周，期间会有中期检查和汇报，最终进行项目答辩。\n\n    *   **成果要求:**  每个小组需要提交项目报告，并在答辩时进行展示。  项目报告需要包含：问题描述、数据来源、研究方法、数据分析过程、结果解释、结论与建议、R代码等。\n\n    *   **评价标准:**  项目评价将综合考虑小组互评和教师评价，内容包括项目报告质量、展示效果、答辩表现、团队合作、创新性、R代码质量等。\n\n## 统计学导论\n\n### 什么是统计学？\n\n*   **什么是统计学？**  统计学是一门从数据中提取信息和知识的科学。  它的目标是：\n\n    *   **描述数据:**  用简洁明了的方式概括数据的特征。\n    *   **推断结论:**  从样本数据推断总体特征。\n    *   **预测未来:**  利用数据模型预测未来的趋势。\n    *   **辅助决策:**  为决策提供数据支持和科学依据。\n\n*   **统计学的应用领域:**  统计学无处不在！  在经济管理领域，统计学更是应用广泛，例如：\n\n    *   **市场调查:**  了解消费者需求和市场趋势，例如，通过问卷调查了解消费者对新产品的偏好。\n    *   **销售预测:**  预测产品销量，制定生产计划和库存管理策略，例如，根据历史销售数据和季节性因素预测下个季度的销售额。\n    *   **风险管理:**  评估和控制经营风险，例如，利用统计模型评估投资组合的风险，或者预测贷款违约率。\n    *   **运营优化:**  提高运营效率，降低成本，例如，通过分析生产数据，找出影响生产效率的关键因素，并进行优化。\n    *   **人力资源管理:**  分析员工绩效，优化人员配置，例如，通过分析员工的绩效数据，评估培训效果，或者预测员工离职率。\n\n    统计学与我们的生活息息相关，掌握统计学方法，将为未来的学习和工作打下坚实的基础。\n\n\n### 统计学基本概念\n\n*   **基本概念详解:**  理解以下基本概念是学好统计学的基石。\n\n    *   **总体 (Population):**\n\n        ::: {.callout-note}\n        ## 总体 (Population)\n\n        **定义：**  **总体** 是我们研究对象的全体，由所有感兴趣的个体组成。  总体是我们希望了解和推断的**目标群体**。\n\n        **关键特征：**\n\n        *   **完整性：** 包含所有研究个体。\n        *   **理论性：**  在实际研究中，有时总体是理论上的，难以完全观测。\n\n        **例子：**\n\n        *   **研究中国大学生的平均身高：**  总体是中国**所有**在校大学生。\n        *   **研究某品牌手机的用户满意度：** 总体是该品牌手机的**所有**用户。\n        *   **研究某城市所有家庭的收入水平：** 总体是该城市**所有**家庭。\n\n        **目标总体 vs. 抽样总体 (重要概念):**\n\n        *   **目标总体 (Target Population):**  研究者**真正想要研究**的总体，例如，所有中国大学生。\n        *   **抽样总体 (Sampling Population):**  **实际抽取样本**的总体，是目标总体的**可操作部分**。  例如，由于时间和经费限制，我们可能只能从中国**部分地区**的大学生中抽取样本，那么这些被抽样的地区大学生构成的总体就是抽样总体。\n\n        **理想情况：**  抽样总体 **尽可能接近** 目标总体，以保证研究结果的**代表性**和**推广性**。  但实际研究中，抽样总体往往只是目标总体的一部分。  需要注意抽样总体和目标总体的差异，谨慎推广研究结论。\n        :::\n\n    *   **个体 (Individual):**\n\n        ::: {.callout-note}\n        ## 个体 (Individual)\n\n        **定义：**  **个体** 是总体中的**基本单元**，是我们研究的**对象**。  总体由若干个个体组成。\n\n        **关键特征：**\n\n        *   **不可再分性：**  在当前研究问题下，个体是**不可再分割**的最小单元。\n        *   **同质性：**  同一总体中的个体，在研究的**某些特征**上是**相似的**。\n\n        **例子 (继续沿用上面的例子):**\n\n        *   **研究中国大学生的平均身高：**  **每个大学生** 就是一个个体。\n        *   **研究某品牌手机的用户满意度：**  **每个手机用户** 就是一个个体。\n        *   **研究某城市所有家庭的收入水平：**  **每个家庭** 就是一个个体。\n\n        **注意：**  个体和总体的概念是**相对**的。  例如，当我们研究 \"大学\" 这个总体时，每个 \"大学\" 是一个个体；但当我们研究某个 \"大学\" 的学生情况时，这个 \"大学\" 就变成了总体，而每个 \"学生\" 则变成了个体。  **个体和总体的划分取决于研究问题和研究范围。**\n        :::\n\n    *   **样本 (Sample):**\n\n        ::: {.callout-note}\n        ## 样本 (Sample)\n\n        **定义：**  **样本** 是从总体中**抽取**的一部分个体的集合。  样本是总体的**代表**。  我们通过研究样本来**推断总体**。\n\n        **关键特征：**\n\n        *   **部分性：**  样本只是总体的一部分。\n        *   **代表性 (重要！):**  样本应该**尽可能代表总体**，反映总体的特征。  只有具有代表性的样本，才能有效地推断总体。\n        *   **随机性 (理想情况):**  理想的样本是**随机抽取**的，以减少抽样偏差，提高样本的代表性。\n\n        **例子 (继续沿用上面的例子):**\n\n        *   **研究中国大学生的平均身高：**  从中国大学生中**随机抽取** 1000 名大学生，这 1000 名大学生构成一个样本。\n        *   **研究某品牌手机的用户满意度：**  从该品牌手机用户中**随机抽取** 500 名用户进行调查，这 500 名用户的回答构成一个样本。\n        *   **研究某城市所有家庭的收入水平：**  从该城市家庭中**随机抽取** 200 户家庭进行调查，这 200 户家庭构成一个样本。\n\n        **样本容量 (Sample Size):**  样本中所包含的个体数量。  样本容量的大小会影响样本的代表性和推断的精度。  **样本容量越大，通常样本的代表性越好，推断结果越精确，但成本也越高。**  如何确定合适的样本容量，是统计学研究中的重要问题。\n\n        **抽样 (Sampling):**  从总体中抽取样本的过程。  抽样方法的选择直接影响样本的代表性。  常见的抽样方法包括：\n\n        *   **简单随机抽样 (Simple Random Sampling):**  每个个体被抽取的概率相等，保证了抽样的公平性。\n        *   **分层抽样 (Stratified Sampling):**  先将总体分层，然后在每层内进行随机抽样，可以提高样本的代表性，尤其适用于总体内部差异较大的情况。\n        *   **整群抽样 (Cluster Sampling):**  先将总体分成若干群，然后随机抽取若干群，再对抽取的群内的所有个体进行调查，适用于总体分布范围广、调查成本较高的情况。\n        *   **系统抽样 (Systematic Sampling):**  按照一定的顺序和间隔抽取个体，操作简便，但需要注意周期性偏差。\n        *   **方便抽样 (Convenience Sampling):**  选择容易接触到的个体作为样本，成本低，但代表性差，结论的推广性受到限制。\n\n        **在实际研究中，需要根据研究目的、总体特征、研究成本等因素，选择合适的抽样方法，尽可能提高样本的代表性，保证研究结论的可靠性和有效性。**\n        :::\n\n    *   **变量 (Variable):**\n\n        ::: {.callout-note}\n        ## 变量 (Variable)\n\n        **定义：**  **变量** 是描述个体**某种特征**的**概念**。  变量是**可变的**，不同个体在同一变量上的取值可能不同。  统计研究的核心内容之一就是研究变量及其关系。\n\n        **关键特征：**\n\n        *   **可变性：**  变量的取值在不同个体之间是变化的。\n        *   **可测量性：**  变量的取值是可以测量和记录的。\n        *   **多样性：**  变量可以是各种各样的，例如，身高、体重、年龄、性别、收入、学历、满意度、偏好等等。\n\n        **例子 (继续沿用上面的例子):**\n\n        *   **研究中国大学生的平均身高：**  **身高** 就是一个变量。  每个大学生的身高数值可能不同。\n        *   **研究某品牌手机的用户满意度：**  **用户满意度** 就是一个变量。  每个用户对手机的满意程度可能不同。  **手机品牌** 也可以作为一个变量，不同用户可能使用不同品牌的手机。\n        *   **研究某城市所有家庭的收入水平：**  **家庭年收入** 就是一个变量。  不同家庭的年收入数值可能不同。  **家庭所在地区** 也可以作为一个变量，不同家庭可能居住在城市的不同地区。\n\n        **变量的类型 (重要！):**  根据变量的性质和测量尺度，可以将变量分为不同的类型：\n\n        *   **分类变量 (Categorical Variable) / 定性变量 (Qualitative Variable):**  描述个体所属类别或属性的变量。  取值为**类别**，例如，性别 (男/女),  学历 (本科/硕士/博士),  颜色 (红/绿/蓝),  品牌 (苹果/华为/小米) 等。  分类变量的取值**没有顺序**或**数值大小**的含义，只能进行分类和计数。  分类变量又可以分为：\n            *   **名义变量 (Nominal Variable):**  类别之间**没有顺序**关系，例如，性别、颜色、品牌等。\n            *   **有序变量 (Ordinal Variable):**  类别之间**有顺序**关系，但**间隔不相等**，例如，学历 (小学 < 初中 < 高中 < 本科 < 硕士 < 博士),  满意度 (非常满意 > 满意 > 一般 > 不满意 > 非常不满意),  等级 (一级 > 二级 > 三级) 等。\n\n        *   **数值变量 (Numerical Variable) / 定量变量 (Quantitative Variable):**  描述个体数量特征的变量。  取值为**数值**，可以进行数学运算，例如，身高 (cm),  体重 (kg),  年龄 (岁),  收入 (元),  考试成绩 (分),  销售额 (万元) 等。  数值变量又可以分为：\n            *   **离散变量 (Discrete Variable):**  取值是**有限的**或**可数的**，通常是整数，例如，人口数、汽车数量、考试及格人数、问卷调查的题项数等。\n            *   **连续变量 (Continuous Variable):**  取值是**无限的**或**不可数的**，在一定范围内可以取任意数值，例如，身高、体重、温度、时间、收入、价格等。\n\n        **理解变量的类型对于选择合适的统计分析方法至关重要。  例如，对于分类变量，我们通常计算频数、频率、百分比等；对于数值变量，我们可以计算均值、标准差、相关系数等。**\n        :::\n\n    *   **数据 (Data):**\n\n        ::: {.callout-note}\n        ## 数据 (Data)\n\n        **定义：** **数据** 是变量的**具体观测值**，是**记录下来的事实**。  数据是统计分析的**原材料**。\n\n        **关键特征：**\n\n        *   **真实性：**  数据应该**真实**反映客观情况。\n        *   **记录性：**  数据是**记录下来**的，可以存储和分析。\n        *   **多样性：**  数据可以是**各种形式**的，例如，数值、文本、图像、音频、视频等。  在统计学中，我们主要处理**结构化数据** (例如，表格数据、数据库数据)。\n\n        **例子 (继续沿用上面的例子):**\n\n        *   **研究中国大学生的平均身高：**  收集到的 **每个大学生的具体身高数值** (例如，170cm, 175cm, 165cm, ...) 就是数据。\n        *   **研究某品牌手机的用户满意度：**  收集到的 **每个用户的满意度评分** (例如，5分, 4分, 3分, ...) 就是数据。  以及 **用户对满意度评价的具体类别** (例如，满意, 一般, 不满意) 也是数据。\n        *   **研究某城市所有家庭的收入水平：**  收集到的 **每个家庭的具体年收入数值** (例如，10万元, 20万元, 8万元, ...) 就是数据。\n\n        **数据与变量的关系：**  数据是变量的具体实现，变量是数据的抽象概括。  **数据是变量的取值，变量是数据的名称。**  我们通过收集数据来研究变量，通过分析数据来了解变量的规律和特征。\n\n        **数据质量 (重要性):**  **高质量的数据** 是得出**可靠统计结论**的基础。  数据质量问题包括：\n\n        *   **数据缺失 (Missing Data):**  部分数据缺失，影响分析的完整性和准确性。\n        *   **数据错误 (Data Error):**  数据记录错误，例如，录入错误、测量误差等。\n        *   **数据不一致 (Data Inconsistency):**  不同来源的数据不一致，例如，不同部门统计的数据口径不一致。\n        *   **数据偏差 (Data Bias):**  数据本身存在系统性偏差，例如，抽样偏差、选择偏差等。\n\n        **在进行统计分析之前，需要对数据进行清洗和预处理，以提高数据质量，保证分析结果的可靠性。**\n        :::\n\n*   **数据的类型:**  根据性质不同，数据可以分为不同的类型 (前面已简要介绍，这里再强调一下)：\n\n    *   **分类数据 (Categorical Data) / 定性数据 (Qualitative Data):**  描述个体所属类别的数据。\n    *   **顺序数据 (Ordinal Data):**  可以排序的数据，但数值之间没有确定的间隔。\n    *   **数值型数据 (Numerical Data) / 定量数据 (Quantitative Data):**  用数值表示的数据，可以进行数学运算。  又分为离散型和连续型。\n\n*   **度量尺度:**  数据的度量尺度决定了可以进行的统计分析类型 (前面已简要介绍，这里再强调一下)：\n\n    *   **定类尺度 (Nominal Scale):**  只能进行分类，类别之间没有顺序。\n    *   **定序尺度 (Ordinal Scale):**  可以排序，类别之间有顺序，但间隔不确定。\n    *   **定距尺度 (Interval Scale):**  可以进行加减运算，数值之间间隔相等，但没有绝对零点。\n    *   **定比尺度 (Ratio Scale):**  可以进行加减乘除运算，数值之间间隔相等，有绝对零点。\n\n*   **理解数据类型和度量尺度** **至关重要**，这将直接影响我们选择合适的统计方法和解释分析结果。  在后续的学习中，我们会不断强调数据类型和度量尺度的重要性。\n\n### R语言、tidyverse 和 AI 辅助工具简介 (VS Code/Cursor)\n\n*   **R 语言:**  统计分析的利器！  在 VS Code 和 Cursor 中，我们可以通过安装相应的扩展来支持 R 语言。\n\n    *   **R 语言的特点:**\n        *   **开源免费:**  任何人都可以免费使用和修改 R 语言。\n        *   **强大的统计分析功能:**  R 语言拥有丰富的统计分析包，几乎涵盖了所有统计分析方法。\n        *   **优秀的数据可视化能力:**  R 语言的 `ggplot2` 包是数据可视化的标杆。\n        *   **活跃的社区:**  R 语言拥有庞大而活跃的社区，可以方便地获取帮助和资源。\n        *   **跨平台性:**  R 语言可以运行在 Windows, macOS, Linux 等多种操作系统上。\n\n    *   **R 语言的应用领域:**  统计学、数据科学、机器学习、生物信息学、金融分析、社会科学等。\n\n    *   **在 VS Code 和 Cursor 中使用 R 语言:**  通过安装 R 扩展 (R Extension for VS Code)，我们可以方便地在 VS Code 和 Cursor 中进行 R 语言编程。  R 扩展提供了代码高亮、代码补全、代码格式化、代码调试、R 终端集成等功能，极大地提升了 R 语言开发效率。\n\n        **在 VS Code 中配置 R 语言环境:**\n\n        1.  **安装 R 软件:**  首先需要在您的计算机上安装 R 软件。  请访问 R 官网 [https://www.r-project.org/](https://www.r-project.org/)，根据您的操作系统下载并安装 R 软件。  安装完成后，在命令行或终端中输入 `R --version`，如果能正确显示 R 版本信息，则说明 R 软件安装成功。\n\n        2.  **安装 VS Code R 扩展:**  打开 VS Code，点击左侧的 \"扩展\" 图标 (或按下 `Ctrl+Shift+X`)，在搜索框中输入 \"R\"，找到 \"R Extension for VS Code\" 扩展，点击 \"安装\" 按钮进行安装。  安装完成后，点击 \"重新加载\" 按钮重启 VS Code。\n\n        3.  **配置 R 路径:**  VS Code R 扩展需要知道 R 软件的安装路径。  在 VS Code 中，按下 `Ctrl+Shift+P` (或 `Cmd+Shift+P` 在 macOS 上) 打开命令面板，输入 \"R: Set R Path\"，选择 \"R: Set R Path\" 命令。  然后，在弹出的输入框中输入 R 软件的安装路径。  如果您不确定 R 软件的安装路径，可以在 R 终端中输入 `R.home()` 命令获取 R 的安装路径。  通常情况下，Windows 上的 R 安装路径类似于 `C:\\Program Files\\R\\R-4.3.0`，macOS 上的 R 安装路径类似于 `/Library/Frameworks/R.framework/Resources`，Linux 上的 R 安装路径可能是 `/usr/bin/R` 或 `/usr/local/bin/R`。  请根据您的实际安装路径进行配置。\n\n        4.  **安装 `languageserver` 包:**  `languageserver` 包是 R 语言的语言服务器协议 (LSP) 实现，为 VS Code R 扩展提供代码智能提示、代码补全、代码诊断等功能。  在 R 终端中输入 `install.packages(\"languageserver\")` 命令安装 `languageserver` 包。\n\n        5.  **创建 R 文件并运行代码:**  在 VS Code 中，创建一个新的文件，将文件后缀名保存为 `.R`，例如 `hello.R`。  在 `hello.R` 文件中输入 R 代码，例如 `print(\"Hello, R in VS Code!\")`。  按下 `Ctrl+Shift+P`，输入 \"R: Run R code\"，选择 \"R: Run R code\" 命令，即可在 VS Code 的 R 终端中运行 R 代码。  您也可以选中要运行的 R 代码，然后右键点击，选择 \"Run Selection in R Terminal\" 运行选中的代码。\n\n        **在 Cursor 中配置 R 语言环境:**\n\n        Cursor 编辑器与 VS Code 高度兼容，可以直接使用 VS Code 的扩展。  因此，在 Cursor 中配置 R 语言环境的步骤与 VS Code 类似：\n\n        1.  **安装 R 软件:**  (同 VS Code 配置步骤 1)\n\n        2.  **安装 VS Code R 扩展:**  打开 Cursor，点击左侧的 \"扩展\" 图标 (或按下 `Ctrl+Shift+X`)，在搜索框中输入 \"R\"，找到 \"R Extension for VS Code\" 扩展，点击 \"安装\" 按钮进行安装。  安装完成后，点击 \"重新加载\" 按钮重启 Cursor。\n\n        3.  **配置 R 路径:**  (同 VS Code 配置步骤 3)  在 Cursor 中，按下 `Ctrl+Shift+P` (或 `Cmd+Shift+P` 在 macOS 上) 打开命令面板，输入 \"R: Set R Path\"，选择 \"R: Set R Path\" 命令，配置 R 软件的安装路径。\n\n        4.  **安装 `languageserver` 包:**  (同 VS Code 配置步骤 4)  在 R 终端中输入 `install.packages(\"languageserver\")` 命令安装 `languageserver` 包。\n\n        5.  **创建 R 文件并运行代码:**  (同 VS Code 配置步骤 5)  在 Cursor 中，创建一个新的 R 文件 (后缀名为 `.R`)，输入 R 代码，使用 \"R: Run R code\" 或 \"Run Selection in R Terminal\" 命令运行 R 代码。\n\n        **完成以上步骤后，您就可以在 VS Code 或 Cursor 中愉快地进行 R 语言编程了！**\n\n*   **tidyverse:**  R 语言的现代数据科学工具集！  `tidyverse` 是由 Hadley Wickham 等开发的 R 包集合，旨在提供一套**一致、简洁、高效**的数据科学工具。  `tidyverse` 包的核心理念是 **\"数据整理 (Data Wrangling) -> 数据可视化 (Data Visualization) -> 数据建模 (Data Modeling)\"** 的数据分析流程。\n\n    *   **`tidyverse` 核心包:**\n        *   **`dplyr`:**  用于数据清洗和数据转换，提供了一系列简洁高效的数据操作函数，例如 `filter()` (筛选行), `select()` (选择列), `mutate()` (创建新列), `group_by()` (分组), `summarise()` (汇总) 等。  `dplyr` 的语法简洁易懂，易于学习和使用。\n        *   **`ggplot2`:**  用于数据可视化，基于 \"图形语法 (Grammar of Graphics)\" 理论，可以绘制各种精美、灵活、可定制的统计图形。  `ggplot2` 是 R 语言数据可视化的标杆，也是数据科学领域最流行的可视化工具之一。\n        *   **`tidyr`:**  用于数据整理，主要用于处理 \"整洁数据 (Tidy Data)\"，将数据整理成适合分析的规范格式。  `tidyr` 提供了 `pivot_longer()` (长数据转换), `pivot_wider()` (宽数据转换), `separate()` (分离列), `unite()` (合并列) 等函数。\n        *   **`readr`:**  用于数据导入，提供快速、可靠的数据读取函数，可以读取 CSV, TSV, FWV 等多种格式的数据文件。  `readr` 默认使用 UTF-8 编码，可以有效避免中文乱码问题。\n        *   **`purrr`:**  用于函数式编程，提供了一系列函数式编程工具，可以简化循环操作，提高代码效率和可读性。\n        *   **`stringr`:**  用于字符串处理，提供了一系列简洁易用的字符串操作函数，可以方便地进行字符串的匹配、替换、提取等操作。\n        *   **`forcats`:**  用于因子 (分类变量) 处理，提供了一系列因子操作函数，可以方便地调整因子水平的顺序、合并因子水平等。\n\n    *   **`tidyverse` 的优势:**\n        *   **一致的语法风格:**  `tidyverse` 包的函数命名和语法风格高度一致，易于学习和记忆。\n        *   **链式操作 (管道操作符 `%>%`):**  `tidyverse` 广泛使用管道操作符 `%>%`，可以将多个操作连接起来，形成清晰的数据处理流程，提高代码可读性。\n        *   **高效的数据处理能力:**  `tidyverse` 包底层使用 C++ 编写，具有高效的数据处理能力，可以处理大规模数据集。\n        *   **与 R 语言生态系统良好集成:**  `tidyverse` 与 R 语言的其他包和工具良好集成，可以方便地进行扩展和应用。\n\n    *   **安装 `tidyverse`:**  在 R 终端中输入 `install.packages(\"tidyverse\")` 即可安装 `tidyverse` 包及其依赖包。  安装完成后，使用 `library(tidyverse)` 加载 `tidyverse` 包。\n\n*   **AI 辅助工具 (VS Code/Cursor 插件):**  AI 正在改变编程方式！  在 VS Code 和 Cursor 中，我们可以使用各种 AI 插件来辅助 R 语言编程和统计分析。\n\n    *   **AI 插件的类型:**  代码自动补全、代码生成、代码解释、代码重构、AI 聊天等。\n    *   **常用的 AI 插件:**  GitHub Copilot, Cursor AI, Codeium, Tabnine 等。\n    *   **AI 插件在统计学习中的作用:**  提高编程效率、辅助代码学习、解答 R 语言问题、辅助数据分析和模型构建等。\n\n        **GitHub Copilot (VS Code/Cursor 插件) 使用示例:**\n\n        1.  **安装 GitHub Copilot 插件:**  在 VS Code 或 Cursor 中，点击左侧的 \"扩展\" 图标，搜索 \"GitHub Copilot\"，找到 \"GitHub Copilot\" 扩展，点击 \"安装\" 按钮进行安装。  安装完成后，需要登录您的 GitHub 账号并订阅 GitHub Copilot 服务 (通常提供免费试用期)。\n\n        2.  **代码自动补全:**  在 R 代码编辑器中输入代码时，GitHub Copilot 会根据上下文自动给出代码建议。  例如，当您输入 `library(` 时，Copilot 会自动提示 R 包的名称列表；当您定义一个函数时，Copilot 会根据函数名和参数自动生成函数体代码。  您可以使用 `Tab` 键接受 Copilot 的建议，或者继续输入自己的代码。\n\n        3.  **代码生成:**  您可以让 GitHub Copilot 根据自然语言描述生成 R 代码。  例如，您可以输入注释 `# generate a scatter plot of mpg and wt from mtcars dataset using ggplot2`，然后按下 `Enter` 键，Copilot 可能会自动生成相应的 R 代码。  您也可以选中一段注释，然后按下 `Ctrl+I` (或 `Cmd+I` 在 macOS 上) 快捷键，让 Copilot 根据注释生成代码。\n\n        4.  **代码解释:**  您可以选中一段 R 代码，然后右键点击，选择 \"Copilot: Explain\"，让 Copilot 解释选中的代码的功能和作用。  Copilot 会在侧边栏中显示代码解释。\n\n        **Cursor AI (Cursor 内置功能) 使用示例:**\n\n        1.  **代码生成:**  在 Cursor 中，您可以按下 `Ctrl+Shift+L` (或 `Cmd+Shift+L` 在 macOS 上) 快捷键，打开 Cursor AI 的 \"Generate\" 功能。  在弹出的输入框中输入自然语言描述，例如 \"用 R 语言读取 CSV 文件并计算均值\"，然后点击 \"Generate\" 按钮，Cursor AI 会自动生成相应的 R 代码。\n\n        2.  **代码解释:**  在 Cursor 中，您可以选中一段 R 代码，然后按下 `Ctrl+Shift+E` (或 `Cmd+Shift+E` 在 macOS 上) 快捷键，打开 Cursor AI 的 \"Explain\" 功能。  Cursor AI 会在编辑器中以注释的形式解释选中的代码。\n\n        3.  **AI 聊天:**  在 Cursor 中，您可以按下 `Ctrl+Shift+C` (或 `Cmd+Shift+C` 在 macOS 上) 快捷键，打开 Cursor AI 的 \"Chat\" 功能。  在聊天框中，您可以向 AI 提问 R 语言相关的问题，例如 \"如何用 R 语言安装包？\"，\"`dplyr::filter()` 函数怎么用？\" 等。  Cursor AI 会根据您的问题给出解答和代码示例。\n\n        **其他 AI 插件的使用方法类似，您可以参考插件的官方文档或使用说明，探索和掌握各种 AI 插件的功能，充分利用 AI 技术来辅助 R 语言学习和编程。**\n\n### 数据获取方法入门\n\n*   **数据来源的重要性:**  数据是统计分析的基础，高质量的数据是得出可靠结论的前提。\n\n    *   **数据来源的类型:**  一手数据 (Primary Data) 和 二手数据 (Secondary Data)。\n    *   **数据获取方法:**  调查、实验、观察、文献检索、网络爬虫等。\n    *   **本课程主要关注二手数据，重点介绍公开数据集和公开 API 的获取方法。**\n\n*   **公开数据集:**\n\n    *   **什么是公开数据集？**  公开数据集是指可以**免费获取**和**自由使用**的数据集。  这些数据集通常由政府机构、研究机构、企业或个人发布，旨在促进数据共享和科学研究。\n\n    *   **常见的公开数据集平台和网站:**\n\n        *   **Kaggle Datasets ([https://www.kaggle.com/datasets](https://www.kaggle.com/datasets)):**  Kaggle 是一个著名的数据科学竞赛平台，也提供了丰富的高质量公开数据集，涵盖了各种领域，例如，金融、电商、医疗、教育、自然语言处理、计算机视觉等。  Kaggle Datasets 的数据质量高，格式规范，并且通常附带详细的数据描述和使用案例，是数据科学学习和项目实践的理想数据来源。\n\n        *   **UCI Machine Learning Repository ([http://archive.ics.uci.edu/ml/datasets.php](http://archive.ics.uci.edu/ml/datasets.php)):**  UCI 机器学习仓库是机器学习领域最经典、最常用的公开数据集平台之一。  提供了大量的机器学习数据集，涵盖了分类、回归、聚类、关联规则挖掘等各种机器学习任务。  UCI 数据集历史悠久，被广泛应用于机器学习算法的benchmark测试和研究。\n\n        *   **政府统计网站:**  各国政府统计部门通常会发布大量的公开统计数据，例如，国家统计局 ([http://www.stats.gov.cn/](http://www.stats.gov.cn/))、美国人口普查局 ([https://www.census.gov/data.html](https://www.census.gov/data.html))、英国国家统计局 ([https://www.ons.gov.uk/](https://www.ons.gov.uk/)) 等。  政府统计数据权威可靠，覆盖面广，是进行宏观经济分析、社会发展研究的重要数据来源。\n\n        *   **行业协会网站:**  各行业协会通常也会发布行业相关的统计数据和报告，例如，中国汽车工业协会 ([http://www.caam.org.cn/](http://www.caam.org.cn/))、中国互联网络信息中心 ([https://www.cnnic.net.cn/](https://www.cnnic.net.cn/))、世界银行公开数据 ([https://data.worldbank.org/](https://data.worldbank.org/)) 等。  行业协会数据具有行业特色，可以用于进行行业分析和市场研究。\n\n        *   **其他公开数据集平台:**  Google Dataset Search ([https://datasetsearch.research.google.com/](https://datasetsearch.research.google.com/)),  Data.gov ([https://www.data.gov/](https://www.data.gov/)),  Awesome Public Datasets ([https://github.com/awesomedata/awesome-public-datasets](https://github.com/awesomedata/awesome-public-datasets)) 等。\n\n    *   **如何查找和下载公开数据集:**\n\n        *   **使用搜索引擎:**  可以使用 Google, Baidu 等搜索引擎，输入关键词 \"公开数据集\"，\"public datasets\"，\"open data\" 等，加上您感兴趣的领域或主题，例如 \"金融公开数据集\"，\"电影数据集\"，\"COVID-19 数据集\" 等，进行搜索。\n\n        *   **访问公开数据集平台:**  直接访问上述公开数据集平台和网站，浏览和搜索您需要的数据集。  大多数平台都提供了数据集的分类、关键词搜索、筛选、预览、下载等功能。\n\n        *   **查看数据集描述和文档:**  在下载数据集之前，务必仔细阅读数据集的描述、数据字典、数据来源、数据质量、使用许可等信息，了解数据集的内容、特点和使用限制，确保数据集符合您的研究需求。\n\n        *   **下载数据集:**  根据平台提供的下载方式，下载数据集文件。  常见的数据集文件格式包括 CSV, TXT, JSON, Excel, SQL, Parquet 等。  选择您熟悉的格式进行下载。\n\n    *   **公开数据集的优缺点:**\n\n        *   **优点:**\n            *   **免费获取:**  无需付费，降低了数据获取成本。\n            *   **数据量大:**  通常包含大量数据，可以满足各种研究需求。\n            *   **覆盖面广:**  涵盖了各种领域和主题，选择范围广。\n            *   **质量较高:**  许多公开数据集经过清洗和整理，数据质量相对较高。\n            *   **易于使用:**  数据格式规范，易于导入和分析。\n            *   **促进共享:**  有利于数据共享和科学研究的开放性。\n\n        *   **缺点:**\n            *   **可能不是最新数据:**  部分公开数据集可能不是最新的，数据更新频率可能较低。\n            *   **数据可能不完整:**  部分公开数据集可能存在数据缺失、数据错误等问题。\n            *   **数据可能不完全符合需求:**  公开数据集是通用的，可能不完全符合特定研究问题的需求，需要进行筛选和处理。\n            *   **数据使用限制:**  部分公开数据集可能存在使用许可限制，例如，禁止商业用途、需要署名等，需要仔细阅读和遵守数据使用协议。\n\n*   **公开 API:**\n\n    *   **什么是 API？**  API (Application Programming Interface，应用程序编程接口) 是一组定义了软件组件之间如何交互的规范和协议。  API 允许不同的软件系统相互通信和交换数据，而无需了解彼此的内部实现细节。  API 就像一个 \"接口\" 或 \"桥梁\"，连接了不同的系统，实现了数据的互联互通。\n\n    *   **公开 API 的概念和作用:**  公开 API (Public API) 是指**对外公开**的 API 接口，允许**第三方开发者**或**用户**通过网络访问和使用其功能和数据。  公开 API 的作用在于：\n\n        *   **数据共享:**  将数据以结构化的方式对外开放，方便用户获取和使用数据。\n        *   **功能开放:**  将软件系统的部分功能对外开放，允许第三方开发者在其基础上进行二次开发和应用创新。\n        *   **生态构建:**  通过开放 API，构建开放的生态系统，吸引更多的开发者和用户参与，共同创造价值。\n\n    *   **常见的公开 API 类型:**\n\n        *   **Web API:**  基于 Web 技术 (HTTP 协议) 的 API，通过 URL 地址进行访问和数据交互。  Web API 是目前最流行的 API 类型。\n\n        *   **REST API (Representational State Transfer API):**  一种特殊的 Web API 设计风格，基于 REST 架构风格，使用 HTTP 协议的 GET, POST, PUT, DELETE 等方法进行资源操作。  REST API 具有简洁、易用、可扩展性强等优点，被广泛应用于 Web 服务开发。  我们通常所说的 \"API\"  在很多情况下就是指 REST API。\n\n    *   **相关公开 API 示例:**\n\n        *   **OMDb API (Open Movie Database API, [http://www.omdbapi.com/](http://www.omdbapi.com/)):**  提供电影、电视剧等影视作品信息的 API。  可以根据电影标题、演员、导演等关键词查询电影信息，包括电影海报、剧情简介、演员列表、评分、票房等。  OMDb API 是一个免费的公开 API，但需要注册获取 API Key 才能使用。\n\n        *   **Spotify API ([https://developer.spotify.com/documentation/web-api/](https://developer.spotify.com/documentation/web-api/)):**  Spotify 音乐平台的 API。  可以获取音乐、艺术家、专辑、播放列表等信息，还可以进行音乐搜索、播放控制、用户数据获取等操作。  Spotify API 需要注册开发者账号并创建应用才能使用，部分高级功能需要付费。\n\n        *   **Yahoo Finance API (Yahoo 财经 API, [https://finance.yahoo.com/](https://finance.yahoo.com/)):**  提供股票、指数、基金等金融产品的实时数据和历史数据。  可以获取股票价格、成交量、财务指标等信息，还可以进行股票搜索、数据导出等操作。  Yahoo Finance API 是一个免费的公开 API，但需要注册账号并获取 API Key 才能使用。\n\n  *   **如何获取和使用公开 API:**\n\n        *   **注册 API 账号:**  访问 API 提供商的官方网站，注册账号并创建应用，获取 API Key。\n\n        *   **阅读 API 文档:**  访问 API 提供商的官方网站，阅读 API 文档，了解 API 的接口、参数、返回结果等。  API 文档通常会详细说明每个 API 接口的功能、请求方法 (GET/POST 等)、请求参数、参数类型、返回值、错误代码、使用示例等信息。  **认真阅读 API 文档是正确使用 API 的前提。**\n\n        *   **发送 API 请求:**  使用编程语言 (例如 R, Python) 或工具 (例如 Postman, curl) 发送 HTTP 请求到 API 接口的 URL 地址。  根据 API 文档的要求，设置请求头 (Headers)、请求参数 (Parameters) 或请求体 (Body)。  通常需要将 API Key 包含在请求头或请求参数中进行身份验证。\n\n        *   **处理 API 响应:**  API 服务器收到请求后，会返回 HTTP 响应。  响应包含状态码 (Status Code)、响应头 (Headers) 和响应体 (Body)。  **状态码**表示请求的处理结果 (例如，200 表示成功，404 表示未找到资源，500 表示服务器错误)。  **响应体**通常是 JSON 或 XML 格式的数据，包含了API 返回的实际数据。  需要解析响应体，提取所需的数据。\n\n        *   **R 语言中使用 `httr` 包调用 API:**  在 R 语言中，可以使用 `httr` 包来发送 HTTP 请求和处理 API 响应。  `httr` 包提供了简洁易用的函数，可以方便地进行 API 调用。\n\n            ```r\n            # 安装 httr 包 (如果尚未安装)\n            # install.packages(\"httr\")\n\n            library(httr)\n            library(jsonlite) # 用于解析 JSON 数据\n\n            # OMDb API 示例 (需要注册并获取 API Key)\n            api_key <- \"YOUR_OMDB_API_KEY\"  # 替换为您的 API Key\n            title <- \"Titanic\"  # 查询电影标题\n\n            # 构造 API 请求 URL\n            api_url <- paste0(\"http://www.omdbapi.com/?apikey=\", api_key, \"&t=\", title)\n\n            # 发送 GET 请求\n            response <- GET(api_url)\n\n            # 检查状态码\n            if (http_status(response)$category == \"Success\") {\n              cat(\"API 请求成功！\\n\")\n              # 解析 JSON 响应内容\n              movie_data <- fromJSON(content(response, \"text\", encoding = \"UTF-8\"))\n              # 打印电影标题和年份\n              cat(\"电影标题:\", movie_data$Title, \"\\n\")\n              cat(\"上映年份:\", movie_data$Year, \"\\n\")\n              # 打印其他电影信息 (可以根据需要提取更多信息)\n              print(movie_data)\n            } else {\n              cat(\"API 请求失败！状态码:\", http_status(response)$status_code, \"\\n\")\n            }\n            ```\n\n            **代码解释:**\n\n            1.  **加载 `httr` 和 `jsonlite` 包:**  `httr` 用于发送 HTTP 请求，`jsonlite` 用于解析 JSON 格式的 API 响应数据。\n            2.  **设置 API Key 和查询参数:**  `api_key` 变量存储您的 OMDb API Key，`title` 变量存储要查询的电影标题。  **请务必替换 `YOUR_OMDB_API_KEY` 为您自己的 API Key。**\n            3.  **构造 API 请求 URL:**  使用 `paste0()` 函数将 API 根 URL, API Key 和查询参数拼接成完整的 API 请求 URL。\n            4.  **发送 GET 请求:**  使用 `GET()` 函数发送 GET 请求到 API URL，并将响应结果保存在 `response` 变量中。\n            5.  **检查状态码:**  使用 `http_status(response)$category == \"Success\"` 检查 HTTP 状态码是否表示成功 (2xx 状态码)。\n            6.  **解析 JSON 响应内容:**  如果请求成功，使用 `content(response, \"text\", encoding = \"UTF-8\")` 获取响应内容 (文本格式，并指定编码为 UTF-8)，然后使用 `fromJSON()` 函数将 JSON 格式的文本数据解析为 R 列表对象 `movie_data`。\n            7.  **提取和打印电影信息:**  从 `movie_data` 列表中提取电影标题 (`movie_data$Title`) 和上映年份 (`movie_data$Year`)，并使用 `cat()` 函数打印输出。  `print(movie_data)` 打印整个 `movie_data` 列表，您可以根据需要提取更多电影信息。\n            8.  **处理请求失败情况:**  如果请求失败 (状态码不是 2xx)，则打印错误信息，包括状态码。\n\n            **请注意:**  OMDb API 是一个免费的 API，但需要注册账号并获取 API Key 才能使用。  请访问 OMDb API 官网 ([http://www.omdbapi.com/](http://www.omdbapi.com/)) 注册账号并获取 API Key。  其他公开 API 的使用方法类似，通常也需要注册账号、阅读 API 文档、发送 API 请求、处理 API 响应等步骤。\n\n*   **公开 API 的优缺点:**\n\n    *   **优点:**\n        *   **数据实时性:**  API 通常提供实时更新的数据，可以获取最新的数据信息。\n        *   **数据结构化:**  API 返回的数据通常是结构化的 (例如 JSON, XML)，易于程序解析和处理。\n        *   **数据获取自动化:**  使用 API 可以实现数据获取的自动化，无需手动下载和整理数据。\n        *   **数据来源权威:**  API 数据通常来自权威的数据提供商，数据质量和可靠性较高。\n\n    *   **缺点:**\n        *   **需要编程知识:**  使用 API 需要一定的编程知识，例如，了解 HTTP 协议、API 文档、编程语言等。\n        *   **API 使用限制:**  部分 API 可能有使用频率限制、数据量限制、功能限制或收费等。\n        *   **API 维护成本:**  API 提供商需要维护 API 接口和服务器，可能会存在 API 不稳定或停止服务的情况。\n        *   **数据格式和接口变化:**  API 的数据格式和接口可能会发生变化，需要及时更新代码以适应变化。\n\n*   **Playwright 爬虫初步介绍:**\n\n    *   **什么是网络爬虫？**  网络爬虫 (Web Crawler)，也称为网络蜘蛛 (Web Spider) 或网络机器人 (Web Robot)，是一种**自动化程序**，用于**抓取互联网上的信息**。  爬虫模拟人类用户浏览网页的行为，自动访问网页，提取网页上的数据，并将数据存储下来。\n\n    *   **Playwright 简介:**  Playwright 是一个强大的**自动化测试和网络爬虫**工具，由 Microsoft 开发。  Playwright 可以**模拟多种浏览器** (Chromium, Firefox, WebKit) 的行为，支持 JavaScript 和多种编程语言 (例如 Python, JavaScript, Java, .NET, **R**)。  Playwright 具有以下优点：\n\n        *   **跨浏览器支持:**  可以模拟 Chromium, Firefox, WebKit 等多种浏览器的行为，确保爬虫的兼容性和稳定性。\n        *   **强大的自动化能力:**  可以模拟用户在浏览器中的各种操作，例如，点击、输入、滚动、截图、等待等，实现复杂的网页交互和数据抓取。\n        *   **异步非阻塞:**  Playwright 基于异步非阻塞架构，可以高效地处理大量的并发请求，提高爬虫的抓取效率。\n        *   **易于使用:**  Playwright 提供了简洁易用的 API，学习曲线平缓，上手容易。\n        *   **多语言支持:**  支持多种编程语言，包括 R 语言 (通过 `rplaywright` 包)。\n\n    *   **爬虫的应用场景:**  网络爬虫在数据获取和信息挖掘方面有广泛的应用场景，例如：\n\n        *   **搜索引擎:**  搜索引擎使用爬虫抓取互联网上的网页，建立索引，提供搜索服务 (例如 Google, Baidu)。\n        *   **数据分析:**  爬虫可以抓取电商平台商品信息、社交媒体用户数据、新闻网站文章等，用于市场分析、舆情监控、竞争情报等。\n        *   **价格监控:**  爬虫可以抓取电商网站商品价格，进行价格比较和监控。\n        *   **内容聚合:**  爬虫可以抓取多个网站的内容，聚合到自己的平台，提供更丰富的信息服务。\n        *   **学术研究:**  爬虫可以抓取学术论文、专利信息、研究数据等，用于学术研究和知识发现。\n\n    *   **爬虫的注意事项 (Robots 协议):**  在进行网络爬虫时，需要遵守网站的 **Robots 协议** ([https://zh.wikipedia.org/wiki/robots.txt](https://zh.wikipedia.org/wiki/robots.txt))。  Robots 协议是网站通过 `robots.txt` 文件声明的**爬虫访问规则**，告知爬虫哪些页面可以抓取，哪些页面禁止抓取。  **合法的爬虫应该遵守 Robots 协议，尊重网站的意愿，避免对网站造成不必要的负担或侵犯网站的权益。**  通常情况下，`robots.txt` 文件位于网站的根目录下 (例如 `https://www.example.com/robots.txt`)。  您可以使用浏览器访问该文件查看网站的爬虫规则。\n\n\n###  本周内容总结与下周预告\n\n*   **本周回顾:**  回顾本周学习内容，巩固重点知识。  本周我们**深入学习**了统计学基本概念，以及项目式教学模式、R 语言和 `tidyverse` 简介 (在 VS Code/Cursor 中)、AI 辅助工具 (VS Code/Cursor 插件)、数据获取方法 (公开数据集、API)、VS Code/Cursor 中 R 语言环境搭建和 `tidyverse` 包安装。\n\n*   **下周预告:**  下周我们将继续学习数据获取实践技巧，包括使用 API 获取数据，以及学习如何使用 R 语言导入各种格式的数据文件。  数据导入是数据分析的关键步骤，下周我们将重点学习数据导入的方法和技巧。\n\n### 课后任务\n\n*   **小组任务:**\n    *   **确定项目主题:**  小组讨论并最终确定项目一的研究主题。  下周上课时需要汇报确定后的主题。\n    *   **初步确定数据获取方式:**  小组讨论并初步确定项目一的数据获取方式。  开始尝试查找和下载数据。\n\n*   **个人任务:**\n    *   **复习本周内容:**  回顾本周讲义和课堂笔记，巩固统计学基本概念、数据获取方法和 VS Code/Cursor 中 R 语言环境搭建步骤。\n    *   **完成环境搭建 (VS Code/Cursor):**  选择 VS Code 或 Cursor 作为 R 语言编程环境，并按照讲义步骤完成 R 语言环境的搭建和 `tidyverse` 包的安装。  尝试运行简单的 R 代码，确保环境配置成功。  探索和体验 AI 插件的功能。\n\n::: {.callout-tip}\n## AI 辅助学习小贴士 (VS Code/Cursor)\n\n*   **R 语言练习:**  在 VS Code 或 Cursor 中练习 R 语言代码时，充分利用 AI 插件的代码自动补全、代码生成、代码解释、AI 聊天等功能。\n*   **概念理解:**  对于本周学习的统计学基本概念，如果遇到理解困难的地方，可以使用 AI 聊天工具进行提问，例如，向 AI 提问 \"什么是总体？\", \"样本的代表性是什么意思？\", \"分类变量和数值变量有什么区别？\" 等。  AI 可以提供更详细的解释和例子，帮助您更好地理解概念。\n*   **数据集搜索:**  使用 AI 工具搜索公开数据集平台和 API 文档，快速找到所需的数据资源。\n*   **问题解答:**  遇到统计学概念或 R 语言代码问题时，尝试使用 AI 插件的 AI 聊天功能提问，获取快速解答。  也可以直接在 Cursor 的聊天框中提问 R 语言问题。\n:::\n\n::: {.callout-note}\n## 学习寄语 (VS Code/Cursor + AI)\n\n选择 VS Code 或 Cursor 配合 AI 插件进行 R 语言学习，是拥抱现代编程工具和 AI 技术的明智之举。  这将使您的学习过程更加高效、智能、有趣。  **本周我们深入学习了统计学的基本概念，这是统计学学习的基石。  务必牢固掌握这些概念，为后续的学习打下坚实的基础。**  充分利用 AI 插件的强大功能，让 AI 成为您的 R 语言和统计学学习助手！  相信大家会在统计学和 R 语言的学习中取得更大的进步！  下周见！\n:::","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles/custom.css","styles/mermaid.css"],"number-sections":false,"toc":true,"toc-depth":3,"output-file":"week01.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}