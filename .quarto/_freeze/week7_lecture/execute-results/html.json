{
  "hash": "086040202bab03c4cf74d320d371ec03",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"第七周：分类数据的智慧：卡方检验与阶段总结\"\nexecute:\n  echo: true\n  message: false\n  warning: false\n  error: false\n  cache: false\n---\n\n\n\n\n## 1. 回顾分类变量与列联表\n\n前几周我们主要关注连续变量的分析（描述统计、t 检验、ANOVA、相关、回归）。本周我们将重点转向**分类变量 (Categorical Variables)**，特别是分析**两个或多个分类变量之间是否存在关联**。\n\n-   **分类变量:** 其值表示类别或标签，而不是数值大小（尽管有时用数字编码）。\n\n    -   **名义变量 (Nominal):** 类别之间没有内在顺序（如性别、血型、产品颜色）。\n    -   **有序变量 (Ordinal):** 类别之间存在逻辑顺序（如教育程度、满意度评分、衣服尺码）。我们在第二周学习的**因子 (Factor)** 类型常用于表示分类变量，特别是需要指定顺序时。\n\n-   **列联表 (Contingency Table) / 交叉表 (Cross-Tabulation):**\n\n    -   用于展示**两个或多个**分类变量频数分布的表格。\n    -   行代表一个变量的类别，列代表另一个变量的类别，单元格中的数值是对应组合的**频数 (Frequency)** 或计数。\n    -   是分析分类变量关系的基础。\n\n-   **R 实现: `table()`** (基础 R 函数)\n\n\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    library(tidyverse)\n    \n    # 使用 ggplot2 内置的 diamonds 数据集的部分数据\n    # (为了简化，只选 GIA 评级和切割质量)\n    set.seed(123) # 为了结果可重复\n    diamonds_sample <- diamonds %>% \n      sample_n(500) %>%\n      select(cut, color)\n    \n    # 创建两个分类变量的列联表\n    contingency_table <- table(diamonds_sample$cut, diamonds_sample$color)\n    print(contingency_table)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>              D  E  F  G  H  I  J\n    #>   Fair       2  1  5  2  6  1  1\n    #>   Good       8  7 12  9  3  3  1\n    #>   Very Good 14 22 24 16 17 12  7\n    #>   Premium    8 17 26 26 27 11 10\n    #>   Ideal     21 40 31 50 36 17  7\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # 也可以使用 dplyr 的 count() 来创建类似的表格 (长格式)\n    diamonds_sample %>% \n      count(cut, color) %>%\n    pivot_wider(names_from = color, values_from = n, values_fill = 0)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #> # A tibble: 5 × 8\n    #>   cut           D     E     F     G     H     I     J\n    #>   <ord>     <int> <int> <int> <int> <int> <int> <int>\n    #> 1 Fair          2     1     5     2     6     1     1\n    #> 2 Good          8     7    12     9     3     3     1\n    #> 3 Very Good    14    22    24    16    17    12     7\n    #> 4 Premium       8    17    26    26    27    11    10\n    #> 5 Ideal        21    40    31    50    36    17     7\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # 计算行百分比、列百分比或总百分比 (使用 prop.table())\n    prop.table(contingency_table) # 占总数的百分比\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>                 D     E     F     G     H     I     J\n    #>   Fair      0.004 0.002 0.010 0.004 0.012 0.002 0.002\n    #>   Good      0.016 0.014 0.024 0.018 0.006 0.006 0.002\n    #>   Very Good 0.028 0.044 0.048 0.032 0.034 0.024 0.014\n    #>   Premium   0.016 0.034 0.052 0.052 0.054 0.022 0.020\n    #>   Ideal     0.042 0.080 0.062 0.100 0.072 0.034 0.014\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    prop.table(contingency_table, margin = 1) # 行百分比 (每行和为 1)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>                      D          E          F          G          H          I\n    #>   Fair      0.11111111 0.05555556 0.27777778 0.11111111 0.33333333 0.05555556\n    #>   Good      0.18604651 0.16279070 0.27906977 0.20930233 0.06976744 0.06976744\n    #>   Very Good 0.12500000 0.19642857 0.21428571 0.14285714 0.15178571 0.10714286\n    #>   Premium   0.06400000 0.13600000 0.20800000 0.20800000 0.21600000 0.08800000\n    #>   Ideal     0.10396040 0.19801980 0.15346535 0.24752475 0.17821782 0.08415842\n    #>            \n    #>                      J\n    #>   Fair      0.05555556\n    #>   Good      0.02325581\n    #>   Very Good 0.06250000\n    #>   Premium   0.08000000\n    #>   Ideal     0.03465347\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    prop.table(contingency_table, margin = 2) # 列百分比 (每列和为 1)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>                      D          E          F          G          H          I\n    #>   Fair      0.03773585 0.01149425 0.05102041 0.01941748 0.06741573 0.02272727\n    #>   Good      0.15094340 0.08045977 0.12244898 0.08737864 0.03370787 0.06818182\n    #>   Very Good 0.26415094 0.25287356 0.24489796 0.15533981 0.19101124 0.27272727\n    #>   Premium   0.15094340 0.19540230 0.26530612 0.25242718 0.30337079 0.25000000\n    #>   Ideal     0.39622642 0.45977011 0.31632653 0.48543689 0.40449438 0.38636364\n    #>            \n    #>                      J\n    #>   Fair      0.03846154\n    #>   Good      0.03846154\n    #>   Very Good 0.26923077\n    #>   Premium   0.38461538\n    #>   Ideal     0.26923077\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n::: {.callout-note title=\"本周目标\"}\n-   熟练创建和解读列联表。\n-   理解卡方检验（特别是独立性检验）的原理、目的和应用场景。\n-   掌握卡方独立性检验的 R 实现 (`chisq.test()`)、假设条件和结果解读。\n-   （可选）了解卡方拟合优度检验。\n-   能够根据问题选择合适的统计检验方法（t 检验、ANOVA、卡方、相关/回归）。\n-   对第一阶段所学的数据处理、可视化和推断统计知识进行系统性总结。\n:::\n\n## 2. 卡方检验 ($\\chi^2$ Test)\n\n卡方检验是一类用于分析**分类数据**的非参数检验方法。它比较**观测频数 (Observed Frequencies)** 与基于某个假设计算出的**期望频数 (Expected Frequencies)** 之间的差异。差异越大，越倾向于拒绝原假设。\n\n本周我们重点关注**卡方独立性检验**。\n\n## 3. 卡方独立性检验 (Chi-squared Test of Independence)\n\n-   **目的:** 判断**两个分类变量**是否**相互独立 (Independent)**。换句话说，一个变量的取值是否与另一个变量的取值**无关**。\n\n-   **应用场景:**\n\n    -   吸烟状况（是/否）与是否患有某种呼吸系统疾病（是/否）之间是否存在关联？\n    -   不同教育水平（小学/中学/大学）的人群在对某项政策的支持度（支持/反对/中立）上是否存在差异？\n    -   产品颜色（红/蓝/绿）的选择是否与消费者性别（男/女）有关？\n\n-   **假设陈述:**\n\n    -   $H_0$: 两个变量**相互独立** (没有关联)。\n    -   $H_1$: 两个变量**不独立** (存在关联)。\n\n-   **期望频数 (Expected Frequency, E) 的思想:**\n\n    -   如果 $H_0$ 为真（即两个变量独立），那么某个单元格 $(i, j)$（第 i 行, 第 j 列）的期望频数可以通过以下方式计算： $$ E_{ij} = \\frac{(\\text{第 } i \\text{ 行的总频数}) \\times (\\text{第 } j \\text{ 列的总频数})}{\\text{总样本量 } N} $$\n    -   期望频数代表了在**变量独立**的假设下，我们**期望**在每个单元格中看到的频数。\n\n-   **检验统计量 (**$\\chi^2$ 值):\n\n    -   衡量所有单元格的**观测频数 (Observed Frequency, O)** 与**期望频数 (Expected Frequency, E)** 之间总差异的度量。 $$ \\chi^2 = \\sum_{\\text{所有单元格}} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}} $$\n    -   $\\chi^2$ 值越大，表示观测频数与独立假设下的期望频数差异越大，越倾向于拒绝 $H_0$。\n    -   该统计量近似服从卡方分布，自由度 $df = (\\text{行数} - 1) \\times (\\text{列数} - 1)$。\n\n-   **假设条件 (重要！):**\n\n    1.  数据是**频数**数据（计数）。\n    2.  样本是**随机**抽取的。\n    3.  **期望频数的要求:**\n        -   **所有**单元格的**期望频数** $E_{ij}$ **通常要求大于等于 5**。这是卡方分布近似有效的关键条件。\n        -   如果期望频数过小（例如，小于 5 的单元格超过 20%），卡方检验的结果可能不可靠。可以考虑：\n            -   **合并类别:** 将频数较少的行或列合并。\n            -   **使用 Fisher 精确检验 (Fisher's Exact Test):** 特别适用于 2x2 列联表，或者当期望频数很小时。`fisher.test()` 在 R 中实现。\n            -   增加样本量。\n\n-   **R 实现: `chisq.test()`**\n\n\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    # 使用之前的 diamonds 列联表 contingency_table\n    print(contingency_table)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>              D  E  F  G  H  I  J\n    #>   Fair       2  1  5  2  6  1  1\n    #>   Good       8  7 12  9  3  3  1\n    #>   Very Good 14 22 24 16 17 12  7\n    #>   Premium    8 17 26 26 27 11 10\n    #>   Ideal     21 40 31 50 36 17  7\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # 执行卡方独立性检验\n    # H0: 切割质量 (cut) 与 颜色 (color) 相互独立\n    # H1: 切割质量 (cut) 与 颜色 (color) 不独立 (存在关联)\n    chisq_result <- chisq.test(contingency_table)\n    print(chisq_result)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #> \n    #> \tPearson's Chi-squared test\n    #> \n    #> data:  contingency_table\n    #> X-squared = 29.085, df = 24, p-value = 0.217\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # 查看期望频数 (如果需要检查假设条件)\n    chisq_result$expected\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>            \n    #>                  D      E      F      G      H      I      J\n    #>   Fair       1.908  3.132  3.528  3.708  3.204  1.584  0.936\n    #>   Good       4.558  7.482  8.428  8.858  7.654  3.784  2.236\n    #>   Very Good 11.872 19.488 21.952 23.072 19.936  9.856  5.824\n    #>   Premium   13.250 21.750 24.500 25.750 22.250 11.000  6.500\n    #>   Ideal     21.412 35.148 39.592 41.612 35.956 17.776 10.504\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n-   **结果解读:**\n\n    -   `X-squared`: 计算得到的 $\\chi^2$ 统计量值 (29.085)。\n    -   `df`: 自由度 (df = (5-1) \\* (7-1) = 4 \\* 6 = 24)。\n    -   `p-value`: P 值 (0.217)。\n    -   **决策:** 将 P 值与 $\\alpha$ (例如 0.05) 比较。\n        -   在这个例子中，P 值 (0.217) \\> 0.05。\n    -   **结论:** 我们**未能拒绝原假设** $H_0$。没有足够的统计证据表明钻石的切割质量和颜色之间存在显著关联 (在 $\\alpha=0.05$ 水平下)。\n    -   **注意:** 如果 P 值小于 $\\alpha$，我们会拒绝 $H_0$，结论是两个变量之间**存在显著关联**。但卡方检验本身**不能**告诉我们关联的**具体模式**（哪些类别组合的差异最大）或**强度**。需要结合观察列联表的百分比或计算其他关联度量（如 Cramer's V）。\n\n-   **Fisher 精确检验 (Fisher's Exact Test): `fisher.test()`**\n\n    -   当期望频数过小时，Fisher 检验是更准确的选择，尤其对于 2x2 表。\n\n\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    # 假设有一个 2x2 表，期望频数可能较小\n    treatment_data <- matrix(c(3, 1, 8, 7), nrow = 2, byrow = TRUE)\n    rownames(treatment_data) <- c(\"Treatment\", \"Control\")\n    colnames(treatment_data) <- c(\"Improved\", \"Not Improved\")\n    print(treatment_data)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #>           Improved Not Improved\n    #> Treatment        3            1\n    #> Control          8            7\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # chisq.test(treatment_data) # 可能会有警告关于近似无效\n    \n    fisher_result <- fisher.test(treatment_data)\n    print(fisher_result) # P 值通常更可靠\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #> \n    #> \tFisher's Exact Test for Count Data\n    #> \n    #> data:  treatment_data\n    #> p-value = 0.6027\n    #> alternative hypothesis: true odds ratio is not equal to 1\n    #> 95 percent confidence interval:\n    #>    0.1561786 156.9964265\n    #> sample estimates:\n    #> odds ratio \n    #>   2.502087\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## 4. (可选) 卡方拟合优度检验 (Chi-squared Goodness-of-Fit Test)\n\n-   **目的:** 检验**单个分类变量**的**观测频数分布**是否与某个**理论或期望的分布**相符。\n\n-   **应用场景:**\n\n    -   掷一个骰子 120 次，检验骰子是否均匀（即每个点数出现的期望频数都是 120/6 = 20）？\n    -   某地区人口普查的民族构成比例是否与全国的民族构成比例一致？\n\n-   **假设陈述:**\n\n    -   $H_0$: 观测频数分布**符合**期望分布。\n    -   $H_1$: 观测频数分布**不符合**期望分布。\n\n-   **R 实现: `chisq.test()`** (传入观测频数向量 `x` 和期望概率向量 `p`)\n\n\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    # 示例：掷骰子 120 次的观测结果\n    observed_counts <- c(18, 22, 19, 21, 23, 17) # 各点数出现次数\n    # 期望概率 (均匀骰子)\n    expected_probs <- rep(1/6, 6)\n    \n    # H0: 骰子是均匀的 (观测分布符合期望概率)\n    # H1: 骰子不均匀\n    gof_result <- chisq.test(x = observed_counts, p = expected_probs)\n    print(gof_result)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    #> \n    #> \tChi-squared test for given probabilities\n    #> \n    #> data:  observed_counts\n    #> X-squared = 1.4, df = 5, p-value = 0.9243\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    # 解读: P 值很大 (0.92)，未能拒绝 H0，没有证据表明骰子不均匀。\n    ```\n    :::\n\n\n\n\n## 5. 实践应用：选择合适的检验方法\n\n现在我们已经学习了多种推断统计方法，关键在于根据研究问题和数据类型选择合适的方法。\n\n::: {.callout-important title=\"方法选择总结\"}\n-   **比较单个总体的均值** vs **已知值**:\n    -   **单样本 t 检验** (总体近似正态或 n≥30)\n-   **比较两个独立总体的均值**:\n    -   **双独立样本 t 检验** (总体近似正态或 n1,n2≥30；Welch's test 默认，不要求方差齐性)\n-   **比较同一个对象两次测量的均值 (配对数据)**:\n    -   **配对样本 t 检验** (差值近似正态或 n_pairs≥30)\n-   **比较三个或更多独立总体的均值**:\n    -   **单因素 ANOVA** (总体近似正态，方差齐性)\n    -   如果 ANOVA 显著，用 **Tukey's HSD** 等事后检验看具体差异。\n-   **检验两个分类变量是否独立/关联**:\n    -   **卡方独立性检验** (期望频数 E≥5)\n    -   (期望频数小或 2x2 表: **Fisher 精确检验**)\n-   **检验单个分类变量的分布** vs **期望分布**:\n    -   **卡方拟合优度检验** (期望频数 E≥5)\n-   **衡量两个连续变量的线性关联强度**:\n    -   **Pearson 相关系数** (线性关系，近似二元正态)\n-   **衡量两个变量的单调关联强度 (含定序变量或非正态连续变量)**:\n    -   **Spearman 相关系数**\n-   **用一个连续变量预测另一个连续变量 (线性关系)**:\n    -   **简单线性回归 (SLR)**\n-   **用多个变量预测一个连续变量**:\n    -   **多元线性回归 (MLR)** (阶段二内容)\n-   **用多个变量预测一个分类变量**:\n    -   **Logistic 回归** 等分类模型 (阶段二内容)\n:::\n\n**思考流程:** \n\n1. 你的研究问题是什么？（比较均值？检验关联？预测？）\n2. 涉及几个变量？变量是什么类型？（连续？分类？名义？有序？）\n3. 数据是独立的还是配对的？\n4. 满足哪些统计假设？（正态性？方差齐性？线性关系？期望频数？）\n\n## 6. 阶段一知识小结\n\n恭喜你完成了统计学与 R 语言学习的第一阶段！让我们回顾一下核心技能和知识点：\n\n-   **数据处理与整形 (`tidyverse`: `dplyr`, `tidyr`)**:\n    -   数据导入 (`readr`)\n    -   数据框与 Tibble\n    -   选择列 (`select`)\n    -   筛选行 (`filter`)\n    -   创建/修改列 (`mutate`)\n    -   排序 (`arrange`)\n    -   分组计算 (`group_by`, `summarise`, `n()`)\n    -   长宽格式转换 (`pivot_longer`, `pivot_wider`)\n    -   处理缺失值 (`is.na`, `drop_na`, `replace_na`, `na.rm=TRUE`)\n    -   管道操作 (`%>%`)\n    -   整洁数据原则\n-   **数据可视化 (`ggplot2`)**:\n    -   图形语法核心：数据、映射 (`aes`)、几何对象 (`geom_...`)\n    -   常用图形：直方图、密度图、箱线图、散点图、条形图、小提琴图\n    -   图形定制：标签 (`labs`)、主题 (`theme_...`)\n-   **描述性统计**:\n    -   集中趋势：均值 (`mean`)、中位数 (`median`)\n    -   离散趋势：极差 (`range`)、分位数/IQR (`quantile`, `IQR`)、方差 (`var`)、标准差 (`sd`)\n-   **推断统计基础**:\n    -   总体与样本\n    -   抽样分布与中心极限定理 (CLT)\n    -   参数估计：点估计 vs 区间估计 (置信区间 `conf.int`)\n    -   假设检验逻辑：$H_0$/$H_1$, $\\alpha$, P 值, 决策规则, 两类错误\n-   **常用推断检验方法**:\n    -   t 检验 (`t.test`: 单样本, 双独立样本, 配对样本)\n    -   方差分析 (`aov`, `summary`, `TukeyHSD`)\n    -   卡方检验 (`chisq.test`, `fisher.test`)\n    -   相关性检验 (`cor.test`)\n    -   简单线性回归 (`lm`, `summary`)\n\n掌握这些基础知识，你已经具备了进行基本数据分析的能力！\n\n## 7. 项目相关与本周总结\n\n-   **项目任务:**\n    -   分析你项目中**分类变量**之间的关系。使用列联表和卡方独立性检验（或 Fisher 检验）来判断它们之间是否存在显著关联。\n    -   开始整合阶段一所学的所有知识，构建你的项目的**整体分析框架**。建议从以下几个方面进行思考：\n        1. 数据预处理：需要进行哪些数据清理和转换？（如处理缺失值、异常值、数据类型转换等）\n        2. 探索性分析：哪些描述性统计量（如均值、中位数、标准差等）和可视化图表（如直方图、散点图、箱线图等）最能揭示数据特征？\n        3. 推断分析：根据研究问题，需要采用哪些统计推断方法？（如 t 检验、方差分析、卡方检验、回归分析等）\n        4. 结果呈现：如何清晰有效地展示分析结果？（如使用表格、图形、统计报告等）\n    （以上内容可先进行初步构思，后续逐步完善）\n-   **本周回顾:** 我们学习了如何使用列联表和卡方检验来分析分类变量之间的关系，并重点掌握了独立性检验。同时，我们对第一阶段的核心内容进行了梳理和总结，强调了根据问题选择合适统计方法的重要性。\n\n**阶段二预告:** 下周我们将进入课程的第二阶段。首先会系统回顾第一阶段的核心内容，然后深入探讨**多元线性回归**，学习如何构建、诊断和解释包含多个自变量的模型，这是统计建模中非常重要的一环。准备好迎接更复杂的模型世界吧！",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}