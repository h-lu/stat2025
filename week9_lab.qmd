---
title: "第九周实验：回归模型诊断实践"
---

## 1. 目标

本实验旨在通过实践操作，熟练掌握诊断线性回归模型（特别是多元线性回归）的常用方法，识别模型是否违反关键假设以及是否存在异常或强影响点。

-   使用 `plot()` 函数生成默认的回归诊断图。
-   解读**残差图 (Residuals vs Fitted)**，检查线性性和等方差性。
-   解读**正态 Q-Q 图 (Normal Q-Q Plot)**，检查残差正态性。
-   (可选) 解读**标度-位置图 (Scale-Location Plot)**，进一步检查等方差性。
-   (可选) 解读**残差与杠杆图 (Residuals vs Leverage Plot)**，识别高杠杆点和强影响点。
-   使用 `shapiro.test()` 对残差进行正态性检验。
-   使用 `car::vif()` 计算方差膨胀因子，诊断多重共线性。
-   使用 `cooks.distance()` 计算 Cook 距离，识别强影响点。

## 2. 数据与模型准备

我们将使用以下两个新模型进行诊断：

-   `model_diamonds`: 基于 `diamonds` 数据集（抽样），`price ~ carat + cut + color + clarity`。
-   `model_complex_sim`: 基于模拟的 `complex_sim_data`，`y ~ x1 + x2 + x3`，该模型拟合的数据包含非线性和异方差性，但模型本身是简单线性的，以便于诊断。

```r
library(tidyverse)
library(ggplot2)
library(car)    # For vif() and leveneTest() if needed
library(broom)  # For augment()

# --- 模型 1: diamonds 数据 ---
# diamonds 数据集来自 ggplot2 (已通过 tidyverse 加载)
# 选择价格作为因变量，克拉、切割、颜色、净度作为自变量
# 注意: cut, color, clarity 是因子变量，lm() 会自动处理
# 为了避免模型过于庞大和运行缓慢，可以考虑抽样一部分数据
set.seed(123)
diamonds_sample <- sample_n(diamonds, 5000) # 抽取 5000 个样本
model_diamonds <- lm(price ~ carat + cut + color + clarity, data = diamonds_sample)
# summary(model_diamonds) # 回顾模型

# --- 模型 2: 更复杂的模拟数据 ---
# 目标: 创建包含非线性关系和异方差性的数据
set.seed(123) # 使用不同的种子
n_complex <- 200 # 样本量增加到 200
x1_complex <- rnorm(n_complex)
x2_complex <- x1_complex * 0.5 + rnorm(n_complex, 0, 0.5) # 中等相关性
x3_complex <- runif(n_complex, -2, 2) # 均匀分布的变量

# 真实模型包含非线性 (x1^2), 交互作用 (x1*x2), 和异方差性 (误差标准差随 |x1| 增加)
error_complex <- rnorm(n_complex, 0, 1 + abs(x1_complex))
y_complex <- 5 + 2*x1_complex - 1*x1_complex^2 + 3*x2_complex + 1.5*x1_complex*x2_complex - 0.5*x3_complex + error_complex

# 可以选择性地加入异常点或高杠杆点 (这里暂时不加，让问题更微妙)
# y_complex[5] <- y_complex[5] - 20 # y方向的异常点
# x1_complex[10] <- x1_complex[10] + 3 # x方向的高杠杆点

complex_sim_data <- tibble(y = y_complex, x1 = x1_complex, x2 = x2_complex, x3 = x3_complex)

# 拟合一个 *错误设定* 的简单线性模型，以便诊断发现问题
model_complex_sim <- lm(y ~ x1 + x2 + x3, data = complex_sim_data)
# summary(model_complex_sim) # 回顾模型
```

## 3. 使用 `plot(model)` 进行图形诊断

`plot()` 函数作用于 `lm` 对象时，会默认生成一系列有用的诊断图。

**任务:**

1. 对 `model_diamonds` 模型使用 `plot()` 函数。观察生成的 4 个主要图形。
2. **解读第一个图 (Residuals vs Fitted):**
    - 红线是否大致水平接近 0？
    - 点的散布是否随机，没有明显模式（如曲线、喇叭形）？
    - 这表明线性性和等方差性假设是否大致满足？
3. **解读第二个图 (Normal Q-Q):**
    - 点是否大致落在虚线（对角线）上？
    - 尾部是否有系统性偏离？
    - 这表明残差正态性假设是否大致满足？
4. **解读第三个图 (Scale-Location):** 
    - 纵轴是标准化残差的平方根 ($\sqrt{|Standardized Residuals|}$)。
    - 红线是否大致水平？
    - 这进一步检查了等方差性假设。如果红线有明显上升或下降趋势，提示异方差。
5. **解读第四个图 (Residuals vs Leverage):**
    - 横轴是杠杆值 (Leverage)，衡量 X 值的极端程度。
    - 纵轴是标准化残差。
    - 图中会用等高线标出 Cook's distance 的阈值（如 0.5, 1）。
    - 观察是否有同时具有高杠杆值和高残差的点（通常在右上角或右下角）？这些点可能是强影响点。是否有 Cook's D 很大的点？
6. 对 `model_complex_sim` 模型重复步骤 1-5，并比较其诊断图与 `model_diamonds` 的差异，观察模拟数据中引入的非线性和异方差性是如何在诊断图中体现的。


## 4. 残差正态性检验 (`shapiro.test`)

**任务:** 

1. 提取 `model_diamonds` 模型的残差。
2. 对这些残差进行 Shapiro-Wilk 正态性检验。
3. 根据 P 值和 $\alpha = 0.05$ 判断是否拒绝正态性假设。结合 Q-Q 图的观察，做出综合判断。
4. 对 `model_complex_sim` 的残差重复步骤 1-3。

## 5. 多重共线性诊断 (`vif`)

**任务:** 

1. 使用 `car::vif()` 函数计算 `model_diamonds` 模型中数值型自变量（`carat`）和因子变量的广义方差膨胀因子 (GVIF)。注意：对于因子变量，需要关注 `GVIF^(1/(2*Df))` 的值。
2. 解读 VIF 值。是否存在 VIF \> 5 或 \> 10 的情况？这说明了什么？
3. 对 `model_complex_sim` 模型重复步骤 1-2。比较结果。

## 6. 强影响点诊断 (`cooks.distance`)

**任务:**

1. 使用 `cooks.distance()` 计算 `model_diamonds` 模型中每个观测点的 Cook 距离。
2. 确定一个阈值（如 $4/n$）。找出 Cook 距离大于该阈值的点的索引。这些点是潜在的强影响点吗？
3. 对 `model_complex_sim` 模型重复步骤 1-2。观察是否存在 Cook 距离较大的点。

## 7. 实验总结

在本实验中，我们系统地实践了线性回归模型诊断的常用工具。通过解读 `plot(model)` 生成的诊断图，我们评估了模型的线性性、等方差性和残差正态性假设。我们还使用 `shapiro.test()` 对正态性进行了检验。利用 `vif()`，我们诊断了模型中是否存在多重共线性问题。最后，通过计算 `cooks.distance()`，我们识别了潜在的强影响点。掌握这些诊断技能对于评估模型可靠性、发现潜在问题并为下一步的模型改进奠定基础至关重要。